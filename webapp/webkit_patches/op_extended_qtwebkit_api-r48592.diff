Index: WebCore/platform/network/qt/QNetworkReplyHandler.cpp
===================================================================
--- WebCore/platform/network/qt/QNetworkReplyHandler.cpp	(revision 48592)
+++ WebCore/platform/network/qt/QNetworkReplyHandler.cpp	(working copy)
@@ -71,7 +71,6 @@ void FormDataIODevice::moveToNextElement
         m_currentFile = new QFile;
 
     m_currentFile->setFileName(m_formElements[0].m_filename);
-    m_currentFile->open(QFile::ReadOnly);
 }
 
 // m_formElements[0] is the current item. If the destination buffer is
@@ -95,11 +94,13 @@ qint64 FormDataIODevice::readData(char* 
             if (m_currentDelta == element.m_data.size())
                 moveToNextElement();
         } else {
-            const QByteArray data = m_currentFile->read(available);
-            memcpy(destination+copied, data.constData(), data.size());
-            copied += data.size();
+            QByteArray name = (QLatin1String("*OPFNBEGIN#") + m_currentFile->fileName() + QLatin1String("*OPFNEND#")).toLatin1();
+            const qint64 toCopy = qMin<qint64>(available, name.size() - m_currentDelta);
+            memcpy(destination+copied, name.constData()+m_currentDelta, toCopy);
+            m_currentDelta += toCopy;
+            copied += toCopy;
 
-            if (m_currentFile->atEnd() || !m_currentFile->isOpen())
+            if (m_currentDelta == name.size())
                 moveToNextElement();
         }
     }
Index: WebKit/qt/Api/qwebpage.cpp
===================================================================
--- WebKit/qt/Api/qwebpage.cpp	(revision 48592)
+++ WebKit/qt/Api/qwebpage.cpp	(working copy)
@@ -328,6 +328,15 @@ bool QWebPagePrivate::acceptNavigationRe
         return true;
     return q->acceptNavigationRequest(frame, request, type);
 }
+#ifdef OP_EXTENDED
+bool QWebPagePrivate::acceptNavigationRequest(QWebFrame *frame, const QNetworkRequest &request, QWebPage::NavigationType type, const QByteArray& postData)
+{
+    if (insideOpenCall
+        && frame == mainFrame)
+        return true;
+    return q->acceptNavigationRequest(frame, request, type, postData);
+}
+#endif
 #endif
 
 void QWebPagePrivate::createMainFrame()
@@ -1895,6 +1904,11 @@ void QWebPage::setFixedContentsSize(cons
     \sa createWindow()
 */
 #if QT_VERSION >= 0x040400
+#ifdef OP_EXTENDED
+bool QWebPage::acceptNavigationRequest(QWebFrame *frame, const QNetworkRequest &request, QWebPage::NavigationType type, const QByteArray& postData) {
+    return acceptNavigationRequest(frame, request, type);
+}
+#endif
 bool QWebPage::acceptNavigationRequest(QWebFrame *frame, const QNetworkRequest &request, QWebPage::NavigationType type)
 #else
 bool QWebPage::acceptNavigationRequest(QWebFrame *frame, const QWebNetworkRequest &request, QWebPage::NavigationType type)
Index: WebKit/qt/Api/qwebpage.h
===================================================================
--- WebKit/qt/Api/qwebpage.h	(revision 48592)
+++ WebKit/qt/Api/qwebpage.h	(working copy)
@@ -21,6 +21,8 @@
 #ifndef QWEBPAGE_H
 #define QWEBPAGE_H
 
+#define OP_EXTENDED
+
 #include "qwebsettings.h"
 #include "qwebkitglobal.h"
 
@@ -331,6 +333,9 @@ protected:
 
 #if QT_VERSION >= 0x040400
     virtual bool acceptNavigationRequest(QWebFrame *frame, const QNetworkRequest &request, NavigationType type);
+#ifdef OP_EXTENDED
+    virtual bool acceptNavigationRequest(QWebFrame *frame, const QNetworkRequest &request, NavigationType type, const QByteArray& postData);
+#endif
 #else
     virtual bool acceptNavigationRequest(QWebFrame *frame, const QWebNetworkRequest &request, NavigationType type);
 #endif
Index: WebKit/qt/Api/qwebpage_p.h
===================================================================
--- WebKit/qt/Api/qwebpage_p.h	(revision 48592)
+++ WebKit/qt/Api/qwebpage_p.h	(working copy)
@@ -151,6 +151,9 @@ public:
 
 #else
     bool acceptNavigationRequest(QWebFrame *frame, const QNetworkRequest &request, QWebPage::NavigationType type);
+#ifdef OP_EXTENDED
+    bool acceptNavigationRequest(QWebFrame *frame, const QNetworkRequest &request, QWebPage::NavigationType type, const QByteArray& postData);
+#endif
     QNetworkAccessManager *networkManager;
 #endif
 
Index: WebKit/qt/WebCoreSupport/FrameLoaderClientQt.cpp
===================================================================
--- WebKit/qt/WebCoreSupport/FrameLoaderClientQt.cpp	(revision 48592)
+++ WebKit/qt/WebCoreSupport/FrameLoaderClientQt.cpp	(working copy)
@@ -905,7 +905,12 @@ void FrameLoaderClientQt::dispatchDecide
 #endif
     QWebPage* page = m_webFrame->page();
 
+#ifdef OP_EXTENDED
+    QByteArray postData = request.httpBody() ? QString(request.httpBody()->flattenToString()).toLatin1() : QByteArray();
+    if (!page->d->acceptNavigationRequest(0, r, QWebPage::NavigationType(action.type()), postData)) {
+#else
     if (!page->d->acceptNavigationRequest(0, r, QWebPage::NavigationType(action.type()))) {
+#endif
         if (action.type() == NavigationTypeFormSubmitted || action.type() == NavigationTypeFormResubmitted)
             m_frame->loader()->resetMultipleFormSubmissionProtection();
 
@@ -930,7 +935,12 @@ void FrameLoaderClientQt::dispatchDecide
 #endif
     QWebPage*page = m_webFrame->page();
 
+#ifdef OP_EXTENDED
+    QByteArray postData = request.httpBody() ? QString(request.httpBody()->flattenToString()).toLatin1() : QByteArray();
+    if (!page->d->acceptNavigationRequest(m_webFrame, r, QWebPage::NavigationType(action.type()), postData)) {
+#else
     if (!page->d->acceptNavigationRequest(m_webFrame, r, QWebPage::NavigationType(action.type()))) {
+#endif
         if (action.type() == NavigationTypeFormSubmitted || action.type() == NavigationTypeFormResubmitted)
             m_frame->loader()->resetMultipleFormSubmissionProtection();
 
